import psycopg2
import os
from dotenv import load_dotenv
from vikusya.utils.logger import log_action, log_error

load_dotenv()

DB_NAME = os.environ["POSTGRES_DB"]
DB_USER = os.environ["POSTGRES_USER"]
DB_PASSWORD = os.environ["POSTGRES_PASSWORD"]
DB_HOST = os.environ["POSTGRES_HOST"]
DB_PORT = os.environ["POSTGRES_PORT"]

def ensure_database_exists():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞—ë—Ç –µ—ë, –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.
    –õ–æ–≥–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã.
    """
    try:
        conn = psycopg2.connect(
            dbname="postgres",  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ë–î!
            user=DB_USER,
            password=DB_PASSWORD,
            host=DB_HOST,
            port=DB_PORT
        )
        conn.autocommit = True
        cursor = conn.cursor()

        cursor.execute("SELECT 1 FROM pg_database WHERE datname = %s", (DB_NAME,))
        exists = cursor.fetchone()

        if not exists:
            cursor.execute(f"CREATE DATABASE {DB_NAME}")
            log_action(f"–°–æ–∑–¥–∞–ª–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö '{DB_NAME}' ü•∞", category="database")
        # –ï—Å–ª–∏ –±–∞–∑–∞ —É–∂–µ –µ—Å—Ç—å ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –ø–∏—à–µ–º –≤ –ª–æ–≥.

        cursor.close()
        conn.close()

    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ/—Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}", category="database")

def get_connection():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ω—É–∂–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    """
    try:
        return psycopg2.connect(
            dbname=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD,
            host=DB_HOST,
            port=DB_PORT
        )
    except Exception as e:
        log_error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö '{DB_NAME}': {e}", category="database")
        raise
